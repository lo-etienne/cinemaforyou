@using CinemaForYou.Migrations
@model CinemaForYou.Models.ReservationMakerViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Member> SignInManager
@inject UserManager<Member> UserManager

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Reservation</h4>
<hr />
<div class="card-img-top d-flex align-items-center">
    <div class="card-headerborder-0" style="padding: 0">
        <img src="~/img/movie/@Model.Movie.Image.ImageName" width="300" height="400" />
    </div>
    <div class="card-body">
        <h2 class="card-title"> @Html.DisplayFor(model => model.Movie.Title)</h2>
        <p class="card-text" style="word-wrap: break-word">@Html.DisplayFor(model => model.Movie.Description)</p>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Movie.ReleaseDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Movie.ReleaseDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Movie.Duration)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Movie.Duration) minute(s)
            </dd>
            <dt class="col-sm-2">
                Genre
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Movie.Type.Name)
            </dd>
        </dl>
    </div>
</div>

<div>
    <form class="col-lg-6 col-md-4 col-sm-2" asp-action="Create">
        <div class="form-group" id="spectatorForm">
            <label for="name">Nom</label>
            <input type="text" name="spectatorName" class="form-control" placeholder="Nom" />
            <label for="surname">Prénom</label>
            <input type="text" name="spectatorSurname" class="form-control" placeholder="Prénom" />
            <label for="year">Âge</label>
            <input type="date" name="spectatorYear" class="form-control" placeholder="Date de naissance" pattern="\d" />
            <small class="form-text text-muted">Si un spectateur n'a pas l'âge requis (PEGI) d'autres films seront proposés</small>
            <br />
            <button type="button" class="btn btn-primary" onclick="addSpectator(this.form)">Ajouter</button>
        </div>

        <table class="table">
            <caption>Liste des spectateurs</caption>
            <thead>
                <tr>
                    <th scope="col">Nom</th>
                    <th scope="col">Prénom</th>
                    <th scope="col">Date de naissance</th>
                    <th scope="col">Supprimer</th>
                </tr>
            </thead>
            <tbody id="spectators">
                <tr>
                    <td scope="col">@UserManager.FindByNameAsync(User.Identity.Name).Result.Name</td>
                    <td scope="col">@UserManager.FindByNameAsync(User.Identity.Name).Result.Surname</td>
                    <td scope="col">@UserManager.FindByNameAsync(User.Identity.Name).Result.Birthdate.ToString("MM/dd/yyyy")</td>
                    <td class="text-danger" scope="col">Vous ne pouvez pas vous supprimer</td>
                </tr>
            </tbody>
        </table>
        <p class="text-info">Il y a <span id="seatsAvailable">@(Model.SeatsAvailable - 1)</span> place(s) restante(s)</p>
        <div class="form-group">
            <input type="submit" value="Réserver" class="btn btn-primary" />
        </div>
        <input type="hidden" asp-for="Reservation.MemberId" value="@UserManager.FindByNameAsync(User.Identity.Name).Result.Id" />
        <input type="hidden" asp-for="Reservation.ShowId" value="@Model.ShowId" />
        <input type="hidden" asp-for="Movie.Id" value="@Model.Movie.Id" />
        <input type="hidden" asp-for="Movie.Title" value="@Model.Movie.Title" />
        <input type="hidden" asp-for="Movie.Description" value="@Model.Movie.Description" />
    </form>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
